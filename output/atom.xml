<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Snook blogg]]></title>
    <link href="/atom.xml" rel="self"/>
    <link href="/"/>
    <updated>2018-05-06T07:37:23+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[A Year with the Anet A8 3D Printer]]></title>
            <link href="/blog/2018/05/10/a-year-with-the-anet-a8-3d-printer/"/>
            <updated>2018-05-10T00:00:00+00:00</updated>
            <id>/blog/2018/05/10/a-year-with-the-anet-a8-3d-printer/</id>
            <content type="html"><![CDATA[<p>Last year, after using 3D Hubs several times, I decided to take the jump; I'm getting myself a 3D printer.
I decided to get an Anet A8 as it's cheap and there is lots of information online to make this printer better.
After ordering it from GearBest for around 160 USD the box arrived faster than I expected.</p>

<p>The assembly went quite smooth, the hardest part was removing all the protective tape from the acrylic parts.
There's just one thing to be aware of; the instructions for the installation of the H frame on the heatbed are wrong.
This has to be mounted the opposite way so the belt below is straight.</p>

<p>I was very impressed with the first prints. I only had to tighten the belts a bit to get a very nice [callibration cube]
(https://www.thingiverse.com/make:370493)</p>

<p>The printer has some yellow tape on the heatbed. This was coming of fast after removing the first few prints from the bed.
I needed a better solution for this so I got this glass plate; https://www.velleman.eu/products/view/?id=417314
The glass plate causes a smooth side when printing which I think is really nice. When the bed is leveled properly it sticks
very well. In case of smaller prints with less contact to the bed I also print a raft so the print won't get loose while printing.
Please note I only print with PLA filament.</p>

<p>The Anet A8 is a clone of Prusa i3. There are lots of modifications on thingiverse to make it look even more like a Prusa i3.
One of the nicest modifications I did was the spool holder that goes on top of the frame. This saves some space and causes
the filament to go in a straight line to the extruder. The printer could now fit on a IKEA Lack side table instead of taking up
all my desk space.</p>

<p>One of the things that was very time consuming with this printer was levelling the bed. Adding wing nut bed level screw knobs
and spring bushings made it a lot easier to level the bed. I had to drill out the holes on the heat bed a bit 
as these were threaded.</p>

<p>With the printer on the small side table it made quite some noise while printing. I printed 6 vibration dampers to reduce this noise.
Also I changed the cooling fan speed to 50% in my slicer software.</p>

<p>Another known problem with this printer is the heatbed connector. I noticed the heatbed wasn't heating up properly and saw the plastic
connector got burned on both sides. I fixed this by soldering the red and black wire directly to the heatbed. To prevent issues with this
in the future I added a cable strain relief.</p>

<p>One of the last thing I installed was a MOSFET. I've added it to move some of the current from the mainboard. Older versions of the mainboard
had different connectors which could melt if not properly connected. The hotbed is now powered thru the MOSFET so that should remove some
stress for the mainboard.</p>

<p>Some other modifications I printed which I think are nice but not really needed;</p>

<ul>
<li>semi circular fan duct</li>
<li>filament guide</li>
<li>mainboard cover</li>
<li>extruder button</li>
<li>cooling fan cover</li>
</ul>

<p>Here's a list of all the upgrades I've printed:
https://www.thingiverse.com/snoek09/collections/anet-a8-upgrades</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Setting up Kotlin in Android Studio]]></title>
            <link href="/blog/2017/03/05/convert-to-kotlin/"/>
            <updated>2017-03-05T00:00:00+00:00</updated>
            <id>/blog/2017/03/05/convert-to-kotlin/</id>
            <content type="html"><![CDATA[<p><a href="blog/2017/02/22/revisiting-android-development">Last time</a> I made a simple
<a href="https://github.com/snoek09/SpotifyAndroidSdkExample">Android app using the Spotify SDK</a>.
Now, it's time to convert this to <a href="http://kotlinlang.org">Kotlin</a> code.
Kotlin is a statically-typed programming language that runs on the Java Virtual Machine.</p>

<h3 id="install-kotlin-plugin">Install Kotlin plugin</h3>

<p>In Android Studio first download the Kotlin plugin.
To use the plugin you can automatically configure or update your build configuration.
In this example it will be configured manually:</p>

<ul>
<li>In <code>build.gradle</code> add the different version string and classpath for the plugin.
These values will vary depending on the version you're using:</li>
</ul>

<pre><code class="gradle">buildscript {
    ext.support_version = '25.2.0'
    ext.kotlin_version = '1.1.0'
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        jcenter()
    }
}
</code></pre>

<ul>
<li>Add the new dependency in <code>app/build.gradle</code>:</li>
</ul>

<pre><code class="gradle">...
    compile "com.android.support:appcompat-v7:$support_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
...
</code></pre>

<h3 id="convert-to-kotlin">Convert to Kotlin</h3>

<p>After syncing the new build configuration you should now be able to convert Java
to Kotlin code. In the <code>Code</code> menu select <code>Convert Java File to Kotlin File</code>.
Or use this short-cut on Linux: <code>Ctrl+Alt+Shift+K</code>.</p>

<p>All changes made for the example app are viewable in this
<a href="https://github.com/snoek09/SpotifyAndroidSdkExample/pull/1/files">pull request</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Revisiting Android Development]]></title>
            <link href="/blog/2017/02/22/revisiting-android-development/"/>
            <updated>2017-02-22T00:00:00+00:00</updated>
            <id>/blog/2017/02/22/revisiting-android-development/</id>
            <content type="html"><![CDATA[<p>In the summer of 2012 I worked on the Ziggo TV Android app. That's almost 5 years ago.
Recently I've taken some first steps to get back into developing a new Android app.
I'm glad to see some nice changes in Android development:</p>

<h3 id="android-studio">Android Studio</h3>

<p>Back then I did all my development in Eclipse. Android Studio would be available a year later.
In the meantime I've been getting used to Jetbrains' PhpStorm since I use this in my day job.
The transation to Android Studio has been pretty seamless so far.</p>

<h3 id="gradle">Gradle</h3>

<p>Ant has been replaced by Gradle as a build system. This could make it easier to mix multiple languages in a project.</p>

<h3 id="kotlin">Kotlin</h3>

<p>Kotlin looks very promising as this could make writing app code more fun.
I just didn't enjoy writing Java code that much. I do have to say back then I wrote a lot of Perl code before that. The verbosity of Java was a bit too much for me.</p>

<h3 id="next-steps">Next steps</h3>

<p>The coming weeks I'll have a look at what's currently possible with Android and Kotlin.
A first example app using the Spotify Android SDK is available here:
<a href="https://github.com/snoek09/SpotifyAndroidSdkExample">https://github.com/snoek09/SpotifyAndroidSdkExample</a></p>
]]></content>
        </entry>
    </feed>